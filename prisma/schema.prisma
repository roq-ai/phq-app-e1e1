generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model answer {
  id             String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  answer_text    String         @db.VarChar(255)
  question_id    String         @db.Uuid
  guest_id       String         @db.Uuid
  date_time      DateTime?      @db.Timestamp(6)
  medication     String?        @db.VarChar(255)
  status         String?        @db.VarChar(255)
  created_at     DateTime       @default(now()) @db.Timestamp(6)
  updated_at     DateTime       @default(now()) @db.Timestamp(6)
  guest          guest          @relation(fields: [guest_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  phq_9_question phq_9_question @relation(fields: [question_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model guest {
  id                String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id           String           @db.Uuid
  organization_id   String           @db.Uuid
  registration_date DateTime?        @db.Date
  last_login        DateTime?        @db.Timestamp(6)
  status            String?          @db.VarChar(255)
  medication        String?          @db.VarChar(255)
  created_at        DateTime         @default(now()) @db.Timestamp(6)
  updated_at        DateTime         @default(now()) @db.Timestamp(6)
  answer            answer[]
  organization      organization     @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user              user             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  phq_9_question    phq_9_question[]
}

model healthcare_provider {
  id               String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  specialization   String?          @db.VarChar(255)
  experience_years Int?
  user_id          String           @db.Uuid
  organization_id  String           @db.Uuid
  license_number   String?          @db.VarChar(255)
  status           String?          @db.VarChar(255)
  created_at       DateTime         @default(now()) @db.Timestamp(6)
  updated_at       DateTime         @default(now()) @db.Timestamp(6)
  organization     organization     @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user             user             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  phq_9_question   phq_9_question[]
}

model organization {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description         String?               @db.VarChar(255)
  status              String?               @db.VarChar(255)
  name                String                @db.VarChar(255)
  created_at          DateTime              @default(now()) @db.Timestamp(6)
  updated_at          DateTime              @default(now()) @db.Timestamp(6)
  user_id             String                @db.Uuid
  tenant_id           String                @db.VarChar(255)
  guest               guest[]
  healthcare_provider healthcare_provider[]
  user                user                  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model phq_9_question {
  id                     String              @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  question_text          String              @db.VarChar(255)
  status                 String?             @db.VarChar(255)
  guest_id               String              @db.Uuid
  healthcare_provider_id String              @db.Uuid
  created_at             DateTime            @default(now()) @db.Timestamp(6)
  updated_at             DateTime            @default(now()) @db.Timestamp(6)
  answer                 answer[]
  guest                  guest               @relation(fields: [guest_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  healthcare_provider    healthcare_provider @relation(fields: [healthcare_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email               String                @unique @db.VarChar(255)
  firstName           String?               @db.VarChar(255)
  lastName            String?               @db.VarChar(255)
  roq_user_id         String                @db.VarChar(255)
  tenant_id           String                @db.VarChar(255)
  created_at          DateTime              @default(now()) @db.Timestamp(6)
  updated_at          DateTime              @default(now()) @db.Timestamp(6)
  guest               guest[]
  healthcare_provider healthcare_provider[]
  organization        organization[]
}
